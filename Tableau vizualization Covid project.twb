<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='TableauvizualizationCovidproject' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.08fb2vw1ha72yh1463rig1xgsjja' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1h4tpy802bjt3h1gph0p300munzf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sc/Desktop/Data analysis/Tableau portoflio project/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1h4tpy802bjt3h1gph0p300munzf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7F05EA5A34D84B50A6831199D5ECE627]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7F05EA5A34D84B50A6831199D5ECE627]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7F05EA5A34D84B50A6831199D5ECE627]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7F05EA5A34D84B50A6831199D5ECE627]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7F05EA5A34D84B50A6831199D5ECE627]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7F05EA5A34D84B50A6831199D5ECE627]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sc/AppData/Local/Temp/TableauTemp/#TableauTemp_15jdhh004almts14u90401iwqak2.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/01/2025 12:13:19 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1428</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28756</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7F05EA5A34D84B50A6831199D5ECE627'>
            <properties context=''>
              <relation connection='excel-direct.1h4tpy802bjt3h1gph0p300munzf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0uydove1wb15td1dkx2yn1hv01xa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1rla1nx0ge35wl10mb1cu12ohut5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sc/Desktop/Data analysis/Tableau portoflio project/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1rla1nx0ge35wl10mb1cu12ohut5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_79382E801B2D4F4083B23B8AB6E17D0D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_79382E801B2D4F4083B23B8AB6E17D0D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_79382E801B2D4F4083B23B8AB6E17D0D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_79382E801B2D4F4083B23B8AB6E17D0D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_79382E801B2D4F4083B23B8AB6E17D0D]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sc/AppData/Local/Temp/TableauTemp/#TableauTemp_1bk9d2f19nz2ae16hn8ce00rm24y.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/01/2025 11:34:46 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_79382E801B2D4F4083B23B8AB6E17D0D'>
            <properties context=''>
              <relation connection='excel-direct.1rla1nx0ge35wl10mb1cu12ohut5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1s8mcvx1sxkecz1b9csz30e8ul32' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.04l4k2d1qe2idj15ogcm81hhswew'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sc/Desktop/Data analysis/Tableau portoflio project/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.04l4k2d1qe2idj15ogcm81hhswew' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_2E431593E75D4FF6B5DE9350262316AF]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_2E431593E75D4FF6B5DE9350262316AF]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2E431593E75D4FF6B5DE9350262316AF]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sc/AppData/Local/Temp/TableauTemp/#TableauTemp_1t22ng10or5i591bmc30c0rktwle.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/01/2025 11:19:43 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2E431593E75D4FF6B5DE9350262316AF'>
            <properties context=''>
              <relation connection='excel-direct.04l4k2d1qe2idj15ogcm81hhswew' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.1wtwiac0rd3zl913qaavo15gwgi3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1phg0xp1d3uw3w16ixh9b1l8tl2p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sc/Desktop/Data analysis/Tableau portoflio project/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1phg0xp1d3uw3w16ixh9b1l8tl2p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4913A29FD15B42C1BF4558F797729D6E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4913A29FD15B42C1BF4558F797729D6E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4913A29FD15B42C1BF4558F797729D6E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4913A29FD15B42C1BF4558F797729D6E]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Sc/AppData/Local/Temp/TableauTemp/#TableauTemp_1sfclui1tkz7ec0zu61gt1sbq1l8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/01/2025 11:32:43 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_4913A29FD15B42C1BF4558F797729D6E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_4913A29FD15B42C1BF4558F797729D6E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_4913A29FD15B42C1BF4558F797729D6E]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4913A29FD15B42C1BF4558F797729D6E'>
            <properties context=''>
              <relation connection='excel-direct.1phg0xp1d3uw3w16ixh9b1l8tl2p' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.1wtwiac0rd3zl913qaavo15gwgi3' />
          </datasources>
          <datasource-dependencies datasource='federated.1wtwiac0rd3zl913qaavo15gwgi3'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wtwiac0rd3zl913qaavo15gwgi3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wtwiac0rd3zl913qaavo15gwgi3].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wtwiac0rd3zl913qaavo15gwgi3].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wtwiac0rd3zl913qaavo15gwgi3].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1wtwiac0rd3zl913qaavo15gwgi3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1wtwiac0rd3zl913qaavo15gwgi3].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wtwiac0rd3zl913qaavo15gwgi3].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wtwiac0rd3zl913qaavo15gwgi3].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1wtwiac0rd3zl913qaavo15gwgi3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wtwiac0rd3zl913qaavo15gwgi3].[:Measure Names]' value='142' />
            <format attr='height' value='32' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1wtwiac0rd3zl913qaavo15gwgi3].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1wtwiac0rd3zl913qaavo15gwgi3].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#4d9be8' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffff7f' />
            <format attr='background-color' value='#f5f1f0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1wtwiac0rd3zl913qaavo15gwgi3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.6408839225769043' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1wtwiac0rd3zl913qaavo15gwgi3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6AF2D90C-72FD-4B4C-B832-133FCF8A6718}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death per continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1s8mcvx1sxkecz1b9csz30e8ul32' />
          </datasources>
          <datasource-dependencies datasource='federated.1s8mcvx1sxkecz1b9csz30e8ul32'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[sum:TotalDeathCount:qk]' value='92' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffbe7d' />
                <format attr='size' value='0.98850828409194946' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{78D6C649-D960-4EC4-8A31-61D67DA454F2}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent population infected per country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0uydove1wb15td1dkx2yn1hv01xa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0uydove1wb15td1dkx2yn1hv01xa'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0uydove1wb15td1dkx2yn1hv01xa].[Longitude (generated)]' field-type='quantitative' max='52591271.142756402' min='34018817.179618418' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0uydove1wb15td1dkx2yn1hv01xa].[Latitude (generated)]' field-type='quantitative' max='8670862.5215664059' min='295810.40779621387' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0uydove1wb15td1dkx2yn1hv01xa].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0uydove1wb15td1dkx2yn1hv01xa].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0uydove1wb15td1dkx2yn1hv01xa].[none:Location:nk]' />
              <color column='[federated.0uydove1wb15td1dkx2yn1hv01xa].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.0uydove1wb15td1dkx2yn1hv01xa].[none:Location:nk]' />
              <geometry column='[federated.0uydove1wb15td1dkx2yn1hv01xa].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uydove1wb15td1dkx2yn1hv01xa].[Latitude (generated)]</rows>
        <cols>[federated.0uydove1wb15td1dkx2yn1hv01xa].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{601F6F9A-46BC-44B5-A436-2DD98A5A141B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent popualtion infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.08fb2vw1ha72yh1463rig1xgsjja' />
          </datasources>
          <datasource-dependencies datasource='federated.08fb2vw1ha72yh1463rig1xgsjja'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08fb2vw1ha72yh1463rig1xgsjja].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.08fb2vw1ha72yh1463rig1xgsjja].[tmn:date:qk]' value='180' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]' />
              <text column='[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]' />
              <color column='[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Forecast Indicator:nk]' />
              <text column='[federated.08fb2vw1ha72yh1463rig1xgsjja].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='416' />
                <format attr='maxheight' value='416' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08fb2vw1ha72yh1463rig1xgsjja].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.08fb2vw1ha72yh1463rig1xgsjja].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{9C23B584-EF9D-49D6-9849-29DEF13C122A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97102' id='8' param='horz' type-v2='layout-flow' w='98554' x='723' y='1449'>
            <zone h='97102' id='6' type-v2='layout-basic' w='84087' x='723' y='1449'>
              <zone h='19203' id='3' name='Sheet 1' w='39964' x='723' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29348' id='5' name='Sheet 2' w='39964' x='723' y='20652'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48551' id='10' name='Sheet 3' w='44123' x='40687' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48551' id='12' name='Sheet 4' w='69620' x='723' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48551' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]' type-v2='color' w='14467' x='70343' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97102' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='14467' x='84810' y='1449'>
              <zone h='11775' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0uydove1wb15td1dkx2yn1hv01xa].[sum:PercentPopulationInfected:qk]' type-v2='color' w='14467' x='84810' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40942' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]&#10;[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Forecast Indicator:nk]' type-v2='color' w='14467' x='84810' y='13224'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97102' id='18' param='vert' type-v2='layout-flow' w='98554' x='723' y='1449'>
                <zone fixed-size='145' h='19203' id='3' is-fixed='true' name='Sheet 1' w='39964' x='723' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48551' id='10' is-fixed='true' name='Sheet 3' w='44123' x='40687' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11775' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0uydove1wb15td1dkx2yn1hv01xa].[sum:PercentPopulationInfected:qk]' type-v2='color' w='14467' x='84810' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29348' id='5' is-fixed='true' name='Sheet 2' w='39964' x='723' y='20652'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48551' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]' type-v2='color' w='14467' x='70343' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48551' id='12' is-fixed='true' name='Sheet 4' w='69620' x='723' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40942' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]&#10;[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Forecast Indicator:nk]' type-v2='color' w='14467' x='84810' y='13224'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E3A929AB-44E7-4505-A179-3DB64C9D1971}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wtwiac0rd3zl913qaavo15gwgi3].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F47466AA-3C53-49A9-918F-14501A2499FB}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F94F4A4-28EA-4CCD-88B0-97B0D7A781C1}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0uydove1wb15td1dkx2yn1hv01xa].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uydove1wb15td1dkx2yn1hv01xa].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2B685860-B202-49B4-ABEB-ACDE8C00451E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]&#10;[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Forecast Indicator:nk]</field>
            <field>[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]</field>
            <field>[federated.08fb2vw1ha72yh1463rig1xgsjja].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6D2F882-A317-4E1E-8D0A-D356DC25030B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1s8mcvx1sxkecz1b9csz30e8ul32].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Forecast Indicator:nk]</field>
              <field>[federated.08fb2vw1ha72yh1463rig1xgsjja].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{D607344A-584C-4B84-B668-A2CA5C84B566}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='69' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      f6b87kEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
